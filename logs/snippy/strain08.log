[21:37:37] This is snippy 4.4.5
[21:37:37] Written by Torsten Seemann
[21:37:37] Obtained from https://github.com/tseemann/snippy
[21:37:37] Detected operating system: linux
[21:37:37] Enabling bundled linux tools.
[21:37:37] Found bwa - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/bwa
[21:37:37] Found bcftools - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/bcftools
[21:37:37] Found samtools - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/samtools
[21:37:37] Found java - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/java
[21:37:37] Found snpEff - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/snpEff
[21:37:37] Found samclip - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/samclip
[21:37:37] Found seqtk - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/seqtk
[21:37:37] Found parallel - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/parallel
[21:37:37] Found freebayes - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/freebayes
[21:37:37] Found freebayes-parallel - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/freebayes-parallel
[21:37:37] Found fasta_generate_regions.py - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/fasta_generate_regions.py
[21:37:37] Found vcfstreamsort - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/vcfstreamsort
[21:37:37] Found vcfuniq - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/vcfuniq
[21:37:37] Found vcffirstheader - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/vcffirstheader
[21:37:37] Found gzip - /bin/gzip
[21:37:37] Found vt - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/vt
[21:37:37] Found snippy-vcf_to_tab - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/snippy-vcf_to_tab
[21:37:37] Found snippy-vcf_report - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/snippy-vcf_report
[21:37:37] Checking version: samtools --version is >= 1.7 - ok, have 1.9
[21:37:37] Checking version: bcftools --version is >= 1.7 - ok, have 1.9
[21:37:37] Checking version: freebayes --version is >= 1.1 - ok, have 1.3
[21:37:37] Checking version: java -version is >= 1.8 - ok, have 1.8
[21:37:37] Checking version: snpEff -version is >= 4.3 - ok, have 4.3
[21:37:37] Checking version: bwa is >= 7.12 - ok, have 7.17
[21:37:37] Using reference: /project/vdputten/SNP_pipeline/input/references/ATCC25922.gbk
[21:37:38] Treating reference as 'genbank' format.
[21:37:38] Will use 8 CPU cores.
[21:37:38] Using read file: /project/vdputten/SNP_pipeline/output/trimmed_illumina/strain08_1_trimmed.fastq.gz
[21:37:38] Using read file: /project/vdputten/SNP_pipeline/output/trimmed_illumina/strain08_2_trimmed.fastq.gz
[21:37:38] Creating folder: output/snippy_out/strain08
[21:37:38] Changing working directory: output/snippy_out/strain08
[21:37:38] Creating reference folder: reference
[21:37:38] Extracting FASTA and GFF from reference.
[21:37:39] Wrote 3 sequences to ref.fa
[21:37:39] Wrote 4914 features to ref.gff
[21:37:39] Creating reference/snpeff.config
[21:37:39] Freebayes will process 15 chunks of 352690 bp, 8 chunks at a time.
[21:37:39] Using BAM RG (Read Group) ID: strain08
[21:37:39] Running: samtools faidx reference/ref.fa 2>> snps.log
[21:37:39] Running: bwa index reference/ref.fa 2>> snps.log
[21:37:42] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[21:37:42] Running: ln -sf reference/ref.fa . 2>> snps.log
[21:37:42] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[21:37:42] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[21:37:42] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[21:37:46] Running: bwa mem  -Y -M -R '@RG\tID:strain08\tSM:strain08' -t 8 reference/ref.fa /project/vdputten/SNP_pipeline/output/trimmed_illumina/strain08_1_trimmed.fastq.gz /project/vdputten/SNP_pipeline/output/trimmed_illumina/strain08_2_trimmed.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /scratch --threads 7 -m 571M | samtools fixmate -m - - | samtools sort -l 0 -T /scratch --threads 7 -m 571M | samtools markdup -T /scratch -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 3 sequences in reference/ref.fa.fai
[M::process] read 555668 sequences (80000146 bp)...
[M::process] read 555982 sequences (80000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 184105, 14, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (148, 200, 266)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 502)
[M::mem_pestat] mean and std.dev: (212.55, 85.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 620)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 256, 274)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 588)
[M::mem_pestat] mean and std.dev: (179.92, 103.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 745)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 555668 reads in 49.140 CPU sec, 6.099 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::process] read 557278 sequences (80000262 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 184398, 15, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (148, 199, 266)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 502)
[M::mem_pestat] mean and std.dev: (212.11, 85.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 620)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (55, 245, 3657)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10861)
[M::mem_pestat] mean and std.dev: (1379.20, 1677.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 14463)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 555982 reads in 51.204 CPU sec, 6.280 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 557404 sequences (80000094 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (12, 184116, 14, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (128, 150, 898)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2438)
[M::mem_pestat] mean and std.dev: (320.45, 435.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3208)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 196, 262)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 494)
[M::mem_pestat] mean and std.dev: (209.23, 84.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 610)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (151, 229, 2416)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6946)
[M::mem_pestat] mean and std.dev: (1233.71, 1519.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9211)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 557278 reads in 51.076 CPU sec, 6.252 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[M::process] read 557852 sequences (80000170 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 184818, 22, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 196, 261)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 491)
[M::mem_pestat] mean and std.dev: (208.71, 83.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 606)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (68, 189, 1956)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5732)
[M::mem_pestat] mean and std.dev: (1146.36, 1550.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7620)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 557404 reads in 51.080 CPU sec, 6.254 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[samclip] Processed 2000000 records...
[samclip] Processed 2100000 records...
[samclip] Processed 2200000 records...
[M::process] read 557808 sequences (80000178 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 184873, 22, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (145, 196, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 490)
[M::mem_pestat] mean and std.dev: (208.24, 83.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 605)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (151, 322, 3590)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10468)
[M::mem_pestat] mean and std.dev: (1814.45, 2131.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13907)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 557852 reads in 51.904 CPU sec, 6.379 real sec
[samclip] Processed 2300000 records...
[samclip] Processed 2400000 records...
[samclip] Processed 2500000 records...
[samclip] Processed 2600000 records...
[samclip] Processed 2700000 records...
[M::process] read 558762 sequences (80000002 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 185058, 15, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (145, 196, 261)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 493)
[M::mem_pestat] mean and std.dev: (208.63, 83.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 609)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (133, 221, 334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 736)
[M::mem_pestat] mean and std.dev: (173.33, 103.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 557808 reads in 56.032 CPU sec, 6.894 real sec
[samclip] Processed 2800000 records...
[samclip] Processed 2900000 records...
[samclip] Processed 3000000 records...
[samclip] Processed 3100000 records...
[samclip] Processed 3200000 records...
[samclip] Processed 3300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 185370, 13, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (144, 193, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 489)
[M::mem_pestat] mean and std.dev: (206.49, 83.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 604)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (196, 3539, 4181)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12151)
[M::mem_pestat] mean and std.dev: (2389.69, 2014.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16136)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::process] read 559500 sequences (80000216 bp)...
[M::mem_process_seqs] Processed 558762 reads in 55.300 CPU sec, 7.645 real sec
[samclip] Processed 3400000 records...
[samclip] Processed 3500000 records...
[samclip] Processed 3600000 records...
[samclip] Processed 3700000 records...
[samclip] Processed 3800000 records...
[samclip] Processed 3900000 records...
[M::process] read 560318 sequences (80000190 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 185677, 18, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (143, 191, 256)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 482)
[M::mem_pestat] mean and std.dev: (204.39, 82.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 595)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (51, 216, 2416)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7146)
[M::mem_pestat] mean and std.dev: (1083.00, 1936.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9511)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (3, 3, 3)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (3, 3)
[M::mem_pestat] mean and std.dev: (3.00, 0.00)
[M::mem_pestat] low and high boundaries for proper pairs: (3, 3)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 559500 reads in 54.632 CPU sec, 7.470 real sec
[samclip] Processed 4000000 records...
[samclip] Processed 4100000 records...
[samclip] Processed 4200000 records...
[samclip] Processed 4300000 records...
[samclip] Processed 4400000 records...
[M::process] read 248604 sequences (35509276 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 186034, 13, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (142, 190, 253)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 475)
[M::mem_pestat] mean and std.dev: (202.57, 80.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 586)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (95, 200, 3420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10070)
[M::mem_pestat] mean and std.dev: (947.46, 1426.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13395)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 560318 reads in 54.292 CPU sec, 7.290 real sec
[samclip] Processed 4500000 records...
[samclip] Processed 4600000 records...
[samclip] Processed 4700000 records...
[samclip] Processed 4800000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 82268, 4, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (142, 190, 254)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 478)
[M::mem_pestat] mean and std.dev: (203.09, 81.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 590)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 4900000 records...
[M::mem_process_seqs] Processed 248604 reads in 24.416 CPU sec, 3.522 real sec
[samclip] Processed 5000000 records...
[samclip] Processed 5100000 records...
[samclip] Processed 5200000 records...
[main] Version: 0.7.17-r1188
[main] CMD: bwa mem -Y -M -R @RG\tID:strain08\tSM:strain08 -t 8 reference/ref.fa /project/vdputten/SNP_pipeline/output/trimmed_illumina/strain08_1_trimmed.fastq.gz /project/vdputten/SNP_pipeline/output/trimmed_illumina/strain08_2_trimmed.fastq.gz
[main] Real time: 66.272 sec; CPU: 500.456 sec
[samclip] Total SAM records 5290689, removed 280196, allowed 110891, passed 5010493
[samclip] Header contained 5 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[21:39:50] Running: samtools index snps.bam 2>> snps.log
[21:39:52] Running: fasta_generate_regions.py reference/ref.fa.fai 352690 > reference/ref.txt 2>> snps.log
[21:39:52] Running: freebayes-parallel reference/ref.txt 8 -p 2 -P 0 -C 10 --min-repeat-entropy 1.5 --strict-vcf -q 13 -m 60 --min-coverage 10 -F 0.05  -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[21:40:38] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=100 && FMT/DP>=10 && (FMT/AO)/(FMT/DP)>=0' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 143
          no. right trimmed                     : 454
          no. left and right trimmed            : 79
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 676

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 676
       total no. variants observed              : 78573
       total no. reference observed             : 0

Time elapsed: 1.41s

[21:40:40] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[21:40:47] Running: /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[21:40:52] Running: /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[21:40:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[21:40:54] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[21:40:54] Running: bcftools consensus -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[21:40:56] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[21:40:56] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[21:40:56] Running: bcftools consensus -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[21:40:57] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[21:40:57] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[21:41:15] Marked 2419 heterozygous sites with 'n'
[21:41:15] Creating extra output files: BED GFF CSV TXT HTML
[21:41:16] Identified 78573 variants.
[21:41:16] Deleting: reference/ref.fa.fai
[21:41:16] Deleting: reference/ref.fa.amb
[21:41:16] Deleting: reference/ref.fa.ann
[21:41:16] Deleting: reference/ref.fa.bwt
[21:41:16] Deleting: reference/ref.fa.pac
[21:41:16] Deleting: reference/ref.fa.sa
[21:41:16] Deleting: snps.bam
[21:41:16] Deleting: snps.bam.bai
[21:41:16] Deleting: snps.raw.vcf
[21:41:16] Deleting: snps.vcf.gz.csi
[21:41:16] Deleting: snps.vcf.gz
[21:41:16] Deleting: snps.consensus.fa
[21:41:16] Deleting: snps.consensus.subs.fa
[21:41:16] Deleting: ref.fa
[21:41:16] Removing folder: reference/genomes
[21:41:16] Removing folder: reference/ref
[21:41:16] Result folder: output/snippy_out/strain08
[21:41:16] Result files:
[21:41:16] * output/snippy_out/strain08/snps.aligned.fa
[21:41:16] * output/snippy_out/strain08/snps.bed
[21:41:16] * output/snippy_out/strain08/snps.csv
[21:41:16] * output/snippy_out/strain08/snps.filt.vcf
[21:41:16] * output/snippy_out/strain08/snps.gff
[21:41:16] * output/snippy_out/strain08/snps.html
[21:41:16] * output/snippy_out/strain08/snps.log
[21:41:16] * output/snippy_out/strain08/snps.subs.vcf
[21:41:16] * output/snippy_out/strain08/snps.tab
[21:41:16] * output/snippy_out/strain08/snps.txt
[21:41:16] * output/snippy_out/strain08/snps.vcf
[21:41:16] Walltime used: 3 minutes, 39 seconds
[21:41:16] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[21:41:16] Done.
