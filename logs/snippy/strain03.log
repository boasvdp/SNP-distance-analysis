[21:11:24] This is snippy 4.4.5
[21:11:24] Written by Torsten Seemann
[21:11:24] Obtained from https://github.com/tseemann/snippy
[21:11:24] Detected operating system: linux
[21:11:24] Enabling bundled linux tools.
[21:11:24] Found bwa - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/bwa
[21:11:24] Found bcftools - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/bcftools
[21:11:24] Found samtools - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/samtools
[21:11:24] Found java - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/java
[21:11:24] Found snpEff - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/snpEff
[21:11:24] Found samclip - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/samclip
[21:11:24] Found seqtk - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/seqtk
[21:11:24] Found parallel - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/parallel
[21:11:24] Found freebayes - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/freebayes
[21:11:24] Found freebayes-parallel - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/freebayes-parallel
[21:11:24] Found fasta_generate_regions.py - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/fasta_generate_regions.py
[21:11:24] Found vcfstreamsort - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/vcfstreamsort
[21:11:24] Found vcfuniq - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/vcfuniq
[21:11:24] Found vcffirstheader - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/vcffirstheader
[21:11:24] Found gzip - /bin/gzip
[21:11:24] Found vt - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/vt
[21:11:24] Found snippy-vcf_to_tab - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/snippy-vcf_to_tab
[21:11:24] Found snippy-vcf_report - /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/snippy-vcf_report
[21:11:25] Checking version: samtools --version is >= 1.7 - ok, have 1.9
[21:11:26] Checking version: bcftools --version is >= 1.7 - ok, have 1.9
[21:11:26] Checking version: freebayes --version is >= 1.1 - ok, have 1.3
[21:11:28] Checking version: java -version is >= 1.8 - ok, have 1.8
[21:11:31] Checking version: snpEff -version is >= 4.3 - ok, have 4.3
[21:11:31] Checking version: bwa is >= 7.12 - ok, have 7.17
[21:11:31] Using reference: /project/vdputten/SNP_pipeline/input/references/ATCC25922.gbk
[21:11:31] Treating reference as 'genbank' format.
[21:11:31] Will use 8 CPU cores.
[21:11:31] Using read file: /project/vdputten/SNP_pipeline/output/trimmed_illumina/strain03_1_trimmed.fastq.gz
[21:11:31] Using read file: /project/vdputten/SNP_pipeline/output/trimmed_illumina/strain03_2_trimmed.fastq.gz
[21:11:31] Creating folder: output/snippy_out/strain03
[21:11:31] Changing working directory: output/snippy_out/strain03
[21:11:31] Creating reference folder: reference
[21:11:31] Extracting FASTA and GFF from reference.
[21:11:33] Wrote 3 sequences to ref.fa
[21:11:33] Wrote 4914 features to ref.gff
[21:11:33] Creating reference/snpeff.config
[21:11:33] Freebayes will process 15 chunks of 352690 bp, 8 chunks at a time.
[21:11:33] Using BAM RG (Read Group) ID: strain03
[21:11:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[21:11:33] Running: bwa index reference/ref.fa 2>> snps.log
[21:11:36] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[21:11:36] Running: ln -sf reference/ref.fa . 2>> snps.log
[21:11:36] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[21:11:36] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[21:11:36] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[21:11:43] Running: bwa mem  -Y -M -R '@RG\tID:strain03\tSM:strain03' -t 8 reference/ref.fa /project/vdputten/SNP_pipeline/output/trimmed_illumina/strain03_1_trimmed.fastq.gz /project/vdputten/SNP_pipeline/output/trimmed_illumina/strain03_2_trimmed.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /scratch --threads 7 -m 571M | samtools fixmate -m - - | samtools sort -l 0 -T /scratch --threads 7 -m 571M | samtools markdup -T /scratch -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 3 sequences in reference/ref.fa.fai
[M::process] read 549730 sequences (80000118 bp)...
[M::process] read 549286 sequences (80000202 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 196102, 18, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (158, 212, 280)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 524)
[M::mem_pestat] mean and std.dev: (224.29, 88.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 646)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (154, 292, 2094)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5974)
[M::mem_pestat] mean and std.dev: (1268.61, 1626.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7914)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (3, 3, 3)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (3, 3)
[M::mem_pestat] mean and std.dev: (3.00, 0.00)
[M::mem_pestat] low and high boundaries for proper pairs: (3, 3)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 549730 reads in 52.676 CPU sec, 6.518 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::process] read 549848 sequences (80000032 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (7, 196407, 26, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (159, 212, 281)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 525)
[M::mem_pestat] mean and std.dev: (225.16, 88.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 647)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (84, 291, 2023)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5901)
[M::mem_pestat] mean and std.dev: (1224.77, 1642.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 7840)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 549286 reads in 54.788 CPU sec, 7.237 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 550188 sequences (80000058 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 196450, 28, 6)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (157, 210, 279)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 523)
[M::mem_pestat] mean and std.dev: (223.40, 88.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 645)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (169, 368, 1851)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5215)
[M::mem_pestat] mean and std.dev: (939.42, 1040.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6897)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 549848 reads in 54.552 CPU sec, 7.354 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[M::process] read 549946 sequences (80000272 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 196439, 19, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (59, 163, 456)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1250)
[M::mem_pestat] mean and std.dev: (146.25, 131.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1647)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (157, 209, 277)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 517)
[M::mem_pestat] mean and std.dev: (222.13, 87.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 637)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (293, 1614, 2094)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5696)
[M::mem_pestat] mean and std.dev: (1636.89, 1677.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8345)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (3, 3, 3)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (3, 3)
[M::mem_pestat] mean and std.dev: (3.00, 0.00)
[M::mem_pestat] low and high boundaries for proper pairs: (3, 3)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 550188 reads in 54.464 CPU sec, 7.252 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[samclip] Processed 2000000 records...
[samclip] Processed 2100000 records...
[samclip] Processed 2200000 records...
[M::process] read 551000 sequences (80000208 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 196518, 36, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (120, 148, 4109)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12087)
[M::mem_pestat] mean and std.dev: (1767.08, 2752.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16076)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (157, 210, 279)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 523)
[M::mem_pestat] mean and std.dev: (223.16, 88.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 645)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (152, 378, 1689)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4763)
[M::mem_pestat] mean and std.dev: (712.39, 928.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6300)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 549946 reads in 54.668 CPU sec, 7.345 real sec
[samclip] Processed 2300000 records...
[samclip] Processed 2400000 records...
[samclip] Processed 2500000 records...
[samclip] Processed 2600000 records...
[samclip] Processed 2700000 records...
[M::process] read 551462 sequences (80000026 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 197804, 32, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (155, 207, 275)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 515)
[M::mem_pestat] mean and std.dev: (220.37, 87.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 635)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (122, 377, 1781)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5099)
[M::mem_pestat] mean and std.dev: (739.97, 969.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6758)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 551000 reads in 54.544 CPU sec, 7.345 real sec
[samclip] Processed 2800000 records...
[samclip] Processed 2900000 records...
[samclip] Processed 3000000 records...
[samclip] Processed 3100000 records...
[samclip] Processed 3200000 records...
[samclip] Processed 3300000 records...
[M::process] read 551442 sequences (80000282 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 197138, 29, 14)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (186, 197, 4237)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12339)
[M::mem_pestat] mean and std.dev: (1283.09, 1839.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16390)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (154, 206, 274)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 514)
[M::mem_pestat] mean and std.dev: (219.09, 86.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 634)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (86, 278, 1598)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4622)
[M::mem_pestat] mean and std.dev: (658.90, 894.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6134)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (3, 3, 4293)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12873)
[M::mem_pestat] mean and std.dev: (1520.29, 2034.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17163)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 551462 reads in 54.496 CPU sec, 7.468 real sec
[samclip] Processed 3400000 records...
[samclip] Processed 3500000 records...
[samclip] Processed 3600000 records...
[samclip] Processed 3700000 records...
[samclip] Processed 3800000 records...
[M::process] read 552248 sequences (80000152 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 197203, 24, 5)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (154, 206, 273)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 511)
[M::mem_pestat] mean and std.dev: (218.78, 86.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 630)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (191, 1642, 5651)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16571)
[M::mem_pestat] mean and std.dev: (2703.54, 2913.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 22031)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 551442 reads in 54.916 CPU sec, 7.530 real sec
[samclip] Processed 3900000 records...
[samclip] Processed 4000000 records...
[samclip] Processed 4100000 records...
[samclip] Processed 4200000 records...
[samclip] Processed 4300000 records...
[samclip] Processed 4400000 records...
[M::process] read 551746 sequences (80000292 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 197454, 22, 6)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (31, 119, 4107)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12259)
[M::mem_pestat] mean and std.dev: (1324.90, 1869.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16335)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (153, 204, 270)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 504)
[M::mem_pestat] mean and std.dev: (216.97, 85.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 621)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (126, 311, 1577)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4479)
[M::mem_pestat] mean and std.dev: (684.18, 722.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5930)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 552248 reads in 54.808 CPU sec, 7.362 real sec
[samclip] Processed 4500000 records...
[samclip] Processed 4600000 records...
[samclip] Processed 4700000 records...
[samclip] Processed 4800000 records...
[samclip] Processed 4900000 records...
[M::process] read 551866 sequences (80000202 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (4, 197140, 26, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (154, 205, 272)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 508)
[M::mem_pestat] mean and std.dev: (218.01, 85.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 626)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (203, 378, 1514)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4136)
[M::mem_pestat] mean and std.dev: (644.04, 611.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5447)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 551746 reads in 55.144 CPU sec, 7.467 real sec
[samclip] Processed 5000000 records...
[samclip] Processed 5100000 records...
[samclip] Processed 5200000 records...
[samclip] Processed 5300000 records...
[samclip] Processed 5400000 records...
[samclip] Processed 5500000 records...
[M::process] read 553326 sequences (80000246 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 197448, 32, 7)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (154, 205, 271)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 505)
[M::mem_pestat] mean and std.dev: (217.47, 85.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 622)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (109, 1633, 3573)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10501)
[M::mem_pestat] mean and std.dev: (1994.72, 2113.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 13965)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 551866 reads in 55.176 CPU sec, 7.378 real sec
[samclip] Processed 5600000 records...
[samclip] Processed 5700000 records...
[samclip] Processed 5800000 records...
[samclip] Processed 5900000 records...
[samclip] Processed 6000000 records...
[M::process] read 59360 sequences (8585578 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 199036, 16, 4)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (151, 201, 267)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 499)
[M::mem_pestat] mean and std.dev: (213.85, 83.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 615)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (57, 212, 374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1008)
[M::mem_pestat] mean and std.dev: (229.47, 211.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1325)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 553326 reads in 52.736 CPU sec, 7.164 real sec
[samclip] Processed 6100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 21191, 2, 0)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (151, 201, 267)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 499)
[M::mem_pestat] mean and std.dev: (213.99, 84.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 615)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 6200000 records...
[M::mem_process_seqs] Processed 59360 reads in 5.732 CPU sec, 0.909 real sec
[samclip] Processed 6300000 records...
[samclip] Processed 6400000 records...
[samclip] Processed 6500000 records...
[samclip] Processed 6600000 records...
[main] Version: 0.7.17-r1188
[main] CMD: bwa mem -Y -M -R @RG\tID:strain03\tSM:strain03 -t 8 reference/ref.fa /project/vdputten/SNP_pipeline/output/trimmed_illumina/strain03_1_trimmed.fastq.gz /project/vdputten/SNP_pipeline/output/trimmed_illumina/strain03_2_trimmed.fastq.gz
[main] Real time: 90.939 sec; CPU: 660.112 sec
[samclip] Total SAM records 6692401, removed 330897, allowed 145242, passed 6361504
[samclip] Header contained 5 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[21:14:28] Running: samtools index snps.bam 2>> snps.log
[21:14:31] Running: fasta_generate_regions.py reference/ref.fa.fai 352690 > reference/ref.txt 2>> snps.log
[21:14:31] Running: freebayes-parallel reference/ref.txt 8 -p 2 -P 0 -C 10 --min-repeat-entropy 1.5 --strict-vcf -q 13 -m 60 --min-coverage 10 -F 0.05  -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[21:15:32] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=100 && FMT/DP>=10 && (FMT/AO)/(FMT/DP)>=0' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 164
          no. right trimmed                     : 460
          no. left and right trimmed            : 73
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 697

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 697
       total no. variants observed              : 80913
       total no. reference observed             : 0

Time elapsed: 1.30s

[21:15:34] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[21:15:40] Running: /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[21:15:45] Running: /project/vdputten/SNP_pipeline/.snakemake/conda/ea2788ee/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[21:15:47] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[21:15:48] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[21:15:48] Running: bcftools consensus -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[21:15:49] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[21:15:50] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[21:15:50] Running: bcftools consensus -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[21:15:50] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[21:15:50] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[21:16:13] Marked 2937 heterozygous sites with 'n'
[21:16:13] Creating extra output files: BED GFF CSV TXT HTML
[21:16:14] Identified 80913 variants.
[21:16:14] Deleting: reference/ref.fa.fai
[21:16:14] Deleting: reference/ref.fa.amb
[21:16:14] Deleting: reference/ref.fa.ann
[21:16:14] Deleting: reference/ref.fa.bwt
[21:16:14] Deleting: reference/ref.fa.pac
[21:16:14] Deleting: reference/ref.fa.sa
[21:16:14] Deleting: snps.bam
[21:16:14] Deleting: snps.bam.bai
[21:16:14] Deleting: snps.raw.vcf
[21:16:14] Deleting: snps.vcf.gz.csi
[21:16:14] Deleting: snps.vcf.gz
[21:16:14] Deleting: snps.consensus.fa
[21:16:14] Deleting: snps.consensus.subs.fa
[21:16:14] Deleting: ref.fa
[21:16:14] Removing folder: reference/genomes
[21:16:14] Removing folder: reference/ref
[21:16:14] Result folder: output/snippy_out/strain03
[21:16:14] Result files:
[21:16:14] * output/snippy_out/strain03/snps.aligned.fa
[21:16:14] * output/snippy_out/strain03/snps.bed
[21:16:14] * output/snippy_out/strain03/snps.csv
[21:16:14] * output/snippy_out/strain03/snps.filt.vcf
[21:16:14] * output/snippy_out/strain03/snps.gff
[21:16:14] * output/snippy_out/strain03/snps.html
[21:16:14] * output/snippy_out/strain03/snps.log
[21:16:14] * output/snippy_out/strain03/snps.subs.vcf
[21:16:14] * output/snippy_out/strain03/snps.tab
[21:16:14] * output/snippy_out/strain03/snps.txt
[21:16:14] * output/snippy_out/strain03/snps.vcf
[21:16:14] Walltime used: 4 minutes, 50 seconds
[21:16:14] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[21:16:14] Done.
